apiVersion: apps/v1
kind: Deployment
metadata: { name: api, namespace: hiqode }
spec:
  replicas: 2
  selector: { matchLabels: { app: api } }
  template:
    metadata: { labels: { app: api } }
    spec:
      containers:
        - name: api
          image: ghcr.io/example/hiqode-api:latest # build & push your image
          env:
            - { name: PORT, value: "8080" }
            - { name: REDIS_URL, valueFrom: { configMapKeyRef: { name: app-config, key: REDIS_URL } } }
            - { name: QUEUE_NAME, valueFrom: { configMapKeyRef: { name: app-config, key: QUEUE_NAME } } }
            - { name: PGHOST, valueFrom: { configMapKeyRef: { name: app-config, key: PGHOST } } }
            - { name: PGPORT, valueFrom: { configMapKeyRef: { name: app-config, key: PGPORT } } }
            - { name: PGUSER, valueFrom: { secretKeyRef: { name: app-secrets, key: pguser } } }
            - { name: PGPASSWORD, valueFrom: { secretKeyRef: { name: app-secrets, key: pgpassword } } }
            - { name: PGDATABASE, valueFrom: { secretKeyRef: { name: app-secrets, key: pgdatabase } } }
          ports: [{ containerPort: 8080 }]
---
apiVersion: v1
kind: Service
metadata: { name: api, namespace: hiqode }
spec:
  selector: { app: api }
  ports: [{ port: 8080, targetPort: 8080 }]
